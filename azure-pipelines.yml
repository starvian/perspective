trigger:
  branches:
    include:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string
  tags:
    include:
    - 'v*'

pr:
  branches:
    include:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

jobs:
- job: 'WebAssembly'
  pool:
    vmImage: 'ubuntu-16.04'

  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - bash: npm install -g yarn
      displayName: "Install Yarn"

    - bash: yarn
      displayName: "Install Deps"
      env:
        PSP_DOCKER: 1

    - bash: yarn build_js --ci
      displayName: "Build"
      env:
        PSP_DOCKER: 1

    - bash: yarn test_js --quiet --ci
      displayName: "Test"
      env:
        PSP_DOCKER: 1

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: JUnit
        testResultsFiles: 'junit.xml'

- job: 'Linux'
  pool:
    vmImage: 'ubuntu-16.04'

  strategy:
    matrix:
      Python27:
        python.version: '2.7'
        python_flag: '--python2'
        manylinux_flag: ''
        artifact_name: 'cp27-cp27m'
      Python27ManyLinux2010:
        python.version: '2.7'
        python_flag: '--python2'
        manylinux_flag: '--manylinux2010'
        artifact_name: 'cp27-cp27m-manylinux2010'
      Python37:
        python.version: '3.7'
        python_flag: ''
        manylinux_flag: ''
        artifact_name: 'cp37-cp37m'
      Python37ManyLinux2010:
        python.version: '3.7'
        python_flag: ''
        manylinux_flag: '--manylinux2010'
        artifact_name: 'cp37-cp37m-manylinux2010'
      Python37ManyLinux2014:
        python.version: '3.7'
        python_flag: ''
        manylinux_flag: '--manylinux2014'
        artifact_name: 'cp37-cp37m-manylinux2014'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - bash: npm install -g yarn
      displayName: "Install Yarn"

    - bash: yarn
      displayName: 'Install Deps'

    - bash: yarn build_python  --ci $(python_flag) $(manylinux_flag)
      displayName: 'build'
      env:
        PSP_DOCKER: 1

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: 'python/perspective/python_junit.xml'
        testRunTitle: 'Publish test results for Python $(python.version) $(manylinux_flag)'

    - task: PublishCodeCoverageResults@1
      inputs: 
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'

    # Build a python wheel for the given platform
    - bash: yarn _wheel_python --ci $(python_flag) $(manylinux_flag)
      # condition: contains(variables['Build.SourceBranch'], 'tags')
      displayName: 'Build wheel'
      env:
        PSP_DOCKER: 1

    # Save it to Azure pipeline storage
    - task: PublishPipelineArtifact@1
      # condition: contains(variables['Build.SourceBranch'], 'tags')
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/python/perspective/dist'
        artifactName: '$(artifact_name)'

- job: 'Windows'
  pool:
    vmImage: 'vs2017-win2016'

  strategy:
    matrix:
      Python37:
        python.version: '3.7'
        python_flag: ''

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - script: |
        which python > python.txt
        set /p PYTHON=<python.txt
        ln -s %PYTHON% %PYTHON%$(python.version)
        python --version
        which python$(python.version)
      displayName: "Which python"

    - script: |
        python -m pip install numpy pyarrow==0.15.1
      displayName: "Python deps"

    - script: npm install -g yarn
      displayName: "Install Yarn"

    - script: yarn
      displayName: 'Install Deps'

    - script: yarn build_python  --ci $(python_flag)
      displayName: 'build'


- job: 'Mac'
  pool:
    vmImage: 'macos-10.14'

  strategy:
    matrix:
      Python27:
        python.version: '2.7'
        python_flag: '--python2'

      Python37:
        python.version: '3.7'
        python_flag: ''

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - script: |
        brew install boost
      displayName: "System deps"

    - script: |
        which python
        python --version
        which python$(python.version)
      displayName: "Which python"

    - script: |
        python -m pip install numpy pyarrow==0.15.1
      displayName: "Python deps"

    - script: npm install -g yarn
      displayName: "Install Yarn"

    - script: yarn
      displayName: 'Install Deps'

    - script: yarn build_python --ci $(python_flag)
      displayName: 'build'

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: 'python/perspective/python_junit.xml'
        testRunTitle: 'Publish test results for Python $(python.version)'

    - task: PublishCodeCoverageResults@1
      inputs: 
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'