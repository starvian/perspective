/******************************************************************************
*
* Copyright (c) 2017, the Perspective Authors.
*
* This file is part of the Perspective library, distributed under the terms of
* the Apache License 2.0.  The full license can be found in the LICENSE file.
*
*/

@import "variables";

:host {
    display: none;
    flex-direction: column;
    max-height: 35%;
    margin-top: 34px;
    margin-bottom: 24px;
    width: 100%;

    flex: 0 0 auto !important;

    * {
        box-sizing: border-box;
    }

    .psp-computed-expression-widget__body {
        margin-bottom: 0;
    }

    .psp-computed-expression-widget__container {
        display: flex;
        flex-direction: column;

        &.row {
            align-items: center;
            flex-direction: row;
        }

        &:first-of-type {
            margin-bottom: 0;
        }
    }

    .psp-computed-expression-widget__action {
        margin-bottom: 10px;

        span#psp-computed-expression-widget-close {
            color: #999;
            display: flex;
            font-family: var(--column-close--font-family, inherit);
            font-size: 16px;
            width: 20px;
            min-width: 20px;
            margin-top: -2px;
            height: 0;

            &:before {
                font-feature-settings: "liga";
                content: var(--column-close--before, "x");
            }

            &:hover {
                cursor: pointer;
            }
        }

        span#psp-computed-expression-widget-title {
            display: flex;
            font-size: 12px;
            display: flex;
            margin-left: 34px;
            margin-top: 3px;
            font-size: 12px;
            color: var(--color, @darkgray);
        }
    }

    .psp-computed-expression-widget__content {
        align-items: center;
        display: flex;
        flex-direction: column;
        margin-top: 5px;

        &.psp-computed-expression-widget__content--absolute {
            position: absolute;
        }

        &.psp-computed-expression-widget__content--nomargin {
            margin-top: 0;
            position: relative;
        }
    }

    .psp-computed-expression-widget__autocomplete {
        color: var(--color, #666666);
        font-family: var(--interface-monospace--font-family, monospace);
        box-sizing: border-box;
        display: none;
        z-index: 100000;
        max-height: 75px;
        font-size: 12px;
        margin-top: 5px;
        max-width: 100%;
        overflow-x: hidden;
        overflow-y: scroll;
        word-break: break-word;

        // Single-line expressions where the autocomplete follows the caret
        &.undocked {
            background: var(--plugin--background, #fff);
            border: 1px solid @border-color;
            position: absolute;
            top: 24px;
        }

        // Multi-line expressions where the autocomplete is static
        &.docked {
            background: var(--plugin--background, none);
            position: static;
            width: 100%;

            span.psp-computed-expression-widget__autocomplete--item {
                border-bottom: 1px solid @border-color;
            }
        }

        span.psp-computed-expression-widget__autocomplete--item {
            display: block;
            overflow-x: auto;
            padding: 5px;

            &:hover {
                // Default colors are the same as Awesomeplete defaults to
                // achieve consistent look.
                background: var(--autocomplete-hover-background, hsl(200, 40%, 80%));
            }

            &:focus, &[aria-selected="true"]{
                background: var(--autocomplete-select-background, hsl(205, 40%, 40%));
                color: var(--color, #fff);
                cursor: pointer;
            }

            &.psp-computed-expression-widget__autocomplete--column-name {
                font-family: var(--interface--font-family, @sans-serif-fonts);

                &:focus, &[aria-selected="true"] {
                    &::before {
                        color: var(--color, #fff) !important;
                    }
                }

                // TODO: find a way to just use these styles instead of copying
                // them from the row
                &:before {
                    font-family: var(--interface-monospace--font-family, monospace);
                    position: relative;
                    display: inline-block;
                    // display: var(--name-before-display, none);
                    padding: var(--column_type--padding, 0px 5px);
                    min-width: 18px;
                    width: var(--column_type--width, auto);
                }

                &.integer:before,
                &.float:before {
                    content: var(
                        --float--column-type--content,
                        var(--column-type--content, "123")
                    );
                    color: var(
                        --float--column-type--color,
                        var(--column-type--color, #016bc6)
                    );
                }

                &.string:before {
                    content: var(
                        --string--column-type--content,
                        var(--column-type--content, "abc")
                    );
                    color: var(
                        --string--column-type--color,
                        var(--column-type--color, #fe9292)
                    );
                }

                &.boolean:before {
                    content: var(
                        --boolean--column-type--content,
                        var(--column-type--content, "t/f")
                    );
                    color: var(
                        --boolean--column-type--color,
                        var(--column-type--color, #999999)
                    );
                }

                &.date:before {
                    content: var(
                        --date--column-type--content,
                        var(--column-type--content, "mdy")
                    );
                    color: var(
                        --date--column-type--color,
                        var(--column-type--color, #999999)
                    );
                }

                &.datetime:before {
                    content: var(
                        --datetime--column-type--content,
                        var(--column-type--content, "mdy")
                    );
                    color: var(
                        --datetime--column-type--color,
                        var(--column-type--color, #999999)
                    );
                }
            }
        }
    }

    #psp-computed-expression-widget-actions {
        display: flex;
        justify-content: flex-end;
        margin-left: 20px;
        margin-top: 12px;
    }

    .psp-computed-expression-widget__label {
        color: var(--color, darkgray);
        font-size: 10px;
        margin-top: 5px;
        max-width: 100%;

        &.psp-computed-expression-widget__error {
            background-color: #cb4549;
            box-sizing: border-box;
            color: #fff !important;
            display: none;
            position: absolute;
            z-index: 10000;
            max-height: 75px;
            padding: 10px;
            overflow-x: hidden;
            overflow-y: scroll;
            top: 100%;
            width: 100%;
            word-break: break-word;
        }
    }

    .psp-computed-expression-widget__button {
        border-radius: 0;
        border-bottom: 1px solid @border-color;
        border-left: 0;
        border-right: 0;
        border-top: 0;
        font-size: 12px;
        margin-left: 6px;
        padding: 2px 5px;

        &:hover {
            cursor: pointer;
        }

        &[disabled] {
            background: @darkgray !important;
            color: @lightgray !important;
            cursor: not-allowed;
            border-bottom-color: #000 !important;
            opacity: 0.5;
        }

        &#psp-computed-expression-widget-button-remove {
            background: #e76056;
            border-bottom-color: #bf4d45;
            color: #fff;
            display: none;

            &:active {
                background: #bf4d45;
                border-bottom-color: #9d3f39;
            }
        }

        &#psp-computed-expression-widget-button-save {
            background: #0171d2;
            border-bottom-color: #0160b1;
            color: #fff;
            height: 22px;

            &:active {
                background: #0160b1;
                border-bottom-color: #014986;
            }
        }
    }
}