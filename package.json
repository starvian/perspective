{
    "private": true,
    "workspaces": [
        "packages/*",
        "examples/*"
    ],
    "devDependencies": {
        "@apache-arrow/es5-esm": "^0.3.1",
        "@babel/core": "^7.1.0",
        "@babel/plugin-proposal-decorators": "^7.1.2",
        "@babel/plugin-transform-for-of": "^7.0.0",
        "@babel/plugin-transform-runtime": "^7.1.0",
        "@babel/polyfill": "^7.0.0",
        "@babel/preset-env": "^7.1.5",
        "@babel/runtime": "^7.1.5",
        "@webpack-contrib/schema-utils": "^1.0.0-beta.0",
        "arraybuffer-loader": "^1.0.2",
        "babel-eslint": "^8.2.3",
        "babel-loader": "^8.0.4",
        "babel-plugin-transform-custom-element-classes": "^0.1.0",
        "base64-font-loader": "0.0.4",
        "chart.js": "^2.7.1",
        "clean-css-cli": "4.2.1",
        "clean-css-loader": "^1.1.0",
        "codemirror": "^5.30.0",
        "codemirror-javascript": "^0.2.0",
        "core-js": "^2.5.7",
        "css-loader": "^0.28.7",
        "documentation": "^5.3.3",
        "eslint": "^4.19.1",
        "eslint-config-prettier": "^3.0.1",
        "eslint-plugin-prettier": "^2.6.2",
        "extract-text-webpack-plugin": "^3.0.2",
        "file-loader": "^2.0.0",
        "html-loader": "^0.5.1",
        "jasmine": "^2.8.0",
        "jasmine-core": "^2.8.0",
        "jest": "^23.6.0",
        "js-beautify": "^1.8.6",
        "lerna": "^2.11.0",
        "less": "^2.7.2",
        "less-loader": "^4.0.5",
        "minimist": "^1.2.0",
        "mkdirp": "^0.5.1",
        "npm-run-all": "^4.1.3",
        "pre-commit": "^1.2.2",
        "prettier": "^1.14.2",
        "rimraf": "^2.6.2",
        "style-loader": "^0.18.2",
        "ts-loader": "^3.5.0",
        "typeface-open-sans": "0.0.54",
        "typeface-roboto-mono": "0.0.54",
        "typescript": "~2.9.2",
        "uglifyjs-webpack-plugin": "^0.4.6",
        "webpack": "^3.5.6",
        "worker-loader": "^2.0.0"
    },
    "pre-commit": [
        "precommit"
    ],
    "scripts": {
        "build,test": "npm run --silent build && npm run --silent test",
        "build,test,bench": "npm run --silent build && npm run --silent test && npm run --silent bench",
        "build,bench": "npm run --silent build && npm run --silent bench",
        "build": "bash -c '[[ -z \"${PSP_DOCKER}\" ]] && npm run --silent _build || npm run --silent _emsdk -- npm run --silent _build'",
        "bench:build": "lerna run bench:build ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}} --stream",
        "bench:run": "lerna exec ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}} -- npm run bench:run",
        "bench": "npm-run-all --silent bench:build bench:run",
        "docs": "lerna run docs --silent --stream",
        "pretest:build": "lerna exec -- mkdir -p build",
        "test:build": "bash -c '[[ -z \"${PSP_DOCKER}\" ]] && npm run --silent _build_test || npm run --silent _emsdk -- npm run --silent _build_test'",
        "test:run": "npm run --silent clean:screenshots && npm run --silent _puppeteer -- node_modules/.bin/lerna exec --concurrency 1 --no-bail ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}} -- yarn --silent test:run",
        "test:run_quiet": "npm run --silent _puppeteer -- node_modules/.bin/lerna run test:run",
        "test": "npm-run-all --silent lint test:build test:run",
        "clean": "find obj -mindepth 1 -delete && lerna run clean ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}} --stream",
        "preclean:screenshots": "lerna exec -- mkdir -p screenshots",
        "clean:screenshots": "lerna run clean:screenshots ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}}",
        "start": "lerna run start --stream --scope",
        "write_tests": "WRITE_TESTS=1 npm run test:run",
        "precommit": "npm run lint",
        "lint": "npm-run-all --silent lint:*",
        "lint:eslint": "eslint packages/*/src/**/*.js packages/*/test/**/*.js examples/*/*.js",
        "lint:clang:cpp": "bash -c 'diff -u <(cat src/cpp/*) <(clang-format -style=file src/cpp/*)'",
        "lint:clang:include": "bash -c 'diff -u <(cat src/include/perspective/*) <(clang-format -style=file src/include/perspective/*)'",
        "fix:es": "npm run lint:eslint -- --fix",
        "fix:clang": "clang-format -i -style=file src/cpp/*.cpp && clang-format -i -style=file src/include/perspective/*.h",
        "fix:less": "prettier --tab-width 4 --write packages/**/src/less/*.less",
        "fix:html": "html-beautify packages/**/src/html/*.html -r",
        "fix:json": "prettier --tab-width 4 --write **/package.json",
        "fix": "npm-run-all --silent fix:*",
        "_build": "lerna run build ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}} --stream",
        "_build_test": "lerna run test:build ${PACKAGE:+--scope=@jpmorganchase/${PACKAGE}} --stream",
        "_emsdk": "docker run --rm -it ${PSP_CPU_COUNT:+--cpus=\"${PSP_CPU_COUNT}.0\"} -v $(pwd):/src -e PACKAGE=${PACKAGE} perspective/emsdk",
        "_puppeteer": "docker run -it --rm --shm-size=2g ${PSP_CPU_COUNT:+--cpus=\"${PSP_CPU_COUNT}.0\"} -u root -e WRITE_TESTS=${WRITE_TESTS} -e PACKAGE=${PACKAGE} -v $(pwd):/src -w /src perspective/puppeteer"
    }
}
